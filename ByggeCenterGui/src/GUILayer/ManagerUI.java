/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUILayer;

import ModelLayer.Group;
import java.awt.event.ActionEvent;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 *
 * @author viva
 */
public class ManagerUI extends javax.swing.JFrame {

    private SeeAll seeAll;
    private JButton[] buttons;
    private JComponent components;
    private ArrayList<JButton> others;
    private String[] text;
    private LoginMenu menu;
    private Registration register;
    private ArrayList<Group> groups;
    private ArrayList<String> id;
    private ArrayList<String> products;
    private ArrayList<String> machines;

    public void setWhichMenu(String whichMenu) {
        this.whichMenu = whichMenu;
    }
    private String representative;
    private String whichMenu;

    /**
     * Creates new form ManagerUI
     */
    public ManagerUI() {
        initComponents();
        buttons = new JButton[]{custButton, prdButton, empButton, machButton, contButton, prdForReorderButton, logOutButton,jButton1};
        addToArrayList();
        hidePersonMenus();
        text = new String[]{"Create", "Find", "See all", "Go back", "Add new"};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        custButton = new javax.swing.JButton();
        prdButton = new javax.swing.JButton();
        empButton = new javax.swing.JButton();
        machButton = new javax.swing.JButton();
        contButton = new javax.swing.JButton();
        prdForReorderButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        findButton = new javax.swing.JButton();
        findTextField = new javax.swing.JTextField();
        seeAllButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        addTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        backButton.setText("Go back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        custButton.setText("Customers Menu");
        custButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custButtonActionPerformed(evt);
            }
        });

        prdButton.setText("Products Menu");
        prdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prdButtonActionPerformed(evt);
            }
        });

        empButton.setText("Employees Menu");
        empButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empButtonActionPerformed(evt);
            }
        });

        machButton.setText("Machines Menu");
        machButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                machButtonActionPerformed(evt);
            }
        });

        contButton.setText("Contractors Menu");
        contButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contButtonActionPerformed(evt);
            }
        });

        prdForReorderButton.setText("Products for reordering");
        prdForReorderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prdForReorderButtonActionPerformed(evt);
            }
        });

        logOutButton.setText("Log out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        findTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                findTextFieldKeyPressed(evt);
            }
        });

        seeAllButton.setText("See all");
        seeAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeAllButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add new");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Statistics");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addGap(169, 169, 169))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(createButton, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(seeAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(findTextField)
                            .addComponent(findButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addTextField))
                        .addGap(68, 68, 68)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prdButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(contButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(machButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(custButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prdForReorderButton, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(empButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(415, 415, 415))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createButton)
                            .addComponent(findButton)
                            .addComponent(addButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(empButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(custButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prdButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(machButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prdForReorderButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seeAllButton)
                            .addComponent(findTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(backButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOutButton)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {contButton, custButton, empButton, logOutButton, machButton, prdButton, prdForReorderButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void empButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empButtonActionPerformed
        showOthers(evt);
    }//GEN-LAST:event_empButtonActionPerformed

    private void custButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custButtonActionPerformed
        showOthers(evt);
    }//GEN-LAST:event_custButtonActionPerformed

    private void contButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contButtonActionPerformed
        showOthers(evt);
    }//GEN-LAST:event_contButtonActionPerformed

    private void prdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prdButtonActionPerformed
        showOthers(evt);
    }//GEN-LAST:event_prdButtonActionPerformed

    private void machButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_machButtonActionPerformed
        MachineMenu machine = new MachineMenu();
        this.dispose();
        machine.main(null);
    }//GEN-LAST:event_machButtonActionPerformed

    private void prdForReorderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prdForReorderButtonActionPerformed
      EmployeeUI.getInstance().setSize(this.getSize());
      EmployeeUI.getInstance().setVisible(true);
      EmployeeUI.getInstance().saleButton("something");
    }//GEN-LAST:event_prdForReorderButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        LoginMenu.emp = null;
        this.setVisible(false);
        menu = new LoginMenu();
        menu.setSize(this.getSize());
        menu.setVisible(true);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        if(whichMenu ==null){
        clearPersonMenus();
        hidePersonMenus();
        showButtons();
        }else{
            this.setVisible(false);
            EmployeeUI.getInstance().setSize(this.getSize());
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        register = new Registration();
        register.setSize(this.getSize());
        register.checkRegistration(representative);      
        register.setVisible(true);
    }//GEN-LAST:event_createButtonActionPerformed

    private void seeAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeAllButtonActionPerformed
        seeAll = new SeeAll();
        seeAll.addToList(representative);
        seeAll.setDifference(null);
        seeAll.setSize(this.getSize());
        seeAll.setVisible(true);
    }//GEN-LAST:event_seeAllButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        register = new Registration();
        String id = findTextField.getText();
        if (id.length() == 0) {
            JOptionPane.showMessageDialog(null, "You have to fill the field bellow the button", "Empty field",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            
            register.setSize(this.getSize());
            register.fillFieldsWhenFound(representative, id);
            register.changeName();
            findTextField.setText("");
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void findTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findTextFieldKeyPressed

    }//GEN-LAST:event_findTextFieldKeyPressed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
               String x = addTextField.getText();
        if (x.length() == 0) {
            JOptionPane.showMessageDialog(null, "You have to fill the field bellow the button", "Empty field",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            switch (representative) {
                case "employees":
                      try{
                          id = register.getPositins("Positions.ser");  
                      }catch(NullPointerException e){
                          id = new ArrayList<>();
                      }
                    id.add(x);
                    savePosition(id, "Positions.ser");
                    break;
                case "customers":
                    try{
                    groups = register.getGroups();
                    }catch(NullPointerException e){
                        groups = new ArrayList<>();
                    }
                    String str = JOptionPane.showInputDialog("Write basic discount percentage");
                    try {
                        int index = Integer.parseInt(str);
                        Group gr = new Group(x, index);
                        groups.add(gr); 
                         savePosition(groups, "Groups.ser");
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "", "Number should be presented", JOptionPane.ERROR_MESSAGE);
                    }
                    break;
                case "products":
                    try{
                     products = register.getPositins("ProductCategories.ser");
                    }catch(NullPointerException e){
                      products = new ArrayList<>();
                    }
                    products.add(x);
                    savePosition(products, "ProductCategories.ser");
                    break;
                case "machines":
                    try{
                    machines = register.getPositins("Machine Categories.ser");
                    }catch(NullPointerException e){
                        machines = new ArrayList<>();
                    }
                    machines.add(x);
                    savePosition(machines, "Machine Categories.ser");
                    break;
            }
            JOptionPane.showMessageDialog(null, "The desired item has been added successfully", "Successful operation",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        addTextField.setText("");
    }//GEN-LAST:event_addButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    Statistics statistics = new Statistics();
    statistics.setSize(this.getSize());
statistics.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

     private void savePosition(ArrayList id,String fileName){
          ObjectOutputStream out = null;
        try {
            out = new ObjectOutputStream(new FileOutputStream(fileName));
            out.writeObject(id);
        } catch (IOException e) {
            System.out.println("Io exception while saving");
        } finally {
            try {
                out.close();
            } catch (IOException es) {
                System.out.println("error with file");
            }
        }
    }
    private void clearButtons() {
        for (JButton button : buttons) {
            button.setVisible(false);
        }
    }

    protected String getID(){
       return findTextField.getText();
    }
    private void showButtons() {
        for (JButton button : buttons) {
            button.setVisible(true);
        }
    }

    private void addToArrayList() {
        others = new ArrayList<>();
        others.add(createButton);
        others.add(findButton);
        others.add(seeAllButton);
        others.add(backButton);
        others.add(addButton);
    }

    private void hidePersonMenus() {
        for (JButton oth : others) {
            oth.setVisible(false);
        }
        findTextField.setVisible(false);
        addTextField.setVisible(false);
    }

    private void showPersonMenus() {
        if (representative.equals("contractors")) {
            for (JButton but : others) {
                if (but.equals(addButton)) {
                    continue;
                }
                but.setVisible(true);
            }
            findTextField.setVisible(true);
            addTextField.setVisible(false);
    }else{
            for(JButton but : others){
                but.setVisible(true);
            }
            findTextField.setVisible(true);
            addTextField.setVisible(true);
        }   
        
    
}

    

    private void clearPersonMenus() {
        Iterator<JButton> it = others.iterator();
        for (int i = 0; i < text.length; i++) {
            if (it.hasNext()) {
                it.next().setText(text[i]);
            }
        }
    }

    protected void showOthers(ActionEvent evt) {
        String button = evt.getActionCommand().substring(0, evt.getActionCommand().indexOf(' ')).toLowerCase();
        representative = button;
        for (JButton but : others) {
            if (but.equals(backButton)) {
                continue;
            }
            if (but.equals(addButton)) {
                switch (button) {
                    case "employees":
                        but.setText(but.getText() + " position for ");
                        break;
                        case "customers":
                            but.setText(but.getText() + " category for");
                    case "products":
                    case "machinеs":
                        but.setText(but.getText() + " category for");
                        break;
                }
            }
            but.setText(but.getText() + " " + button);
        }
        clearButtons();
        showPersonMenus();
    }

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addTextField;
    private javax.swing.JButton backButton;
    private javax.swing.JButton contButton;
    private javax.swing.JButton createButton;
    private javax.swing.JButton custButton;
    private javax.swing.JButton empButton;
    private javax.swing.JButton findButton;
    private javax.swing.JTextField findTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton machButton;
    private javax.swing.JButton prdButton;
    private javax.swing.JButton prdForReorderButton;
    private javax.swing.JButton seeAllButton;
    // End of variables declaration//GEN-END:variables
}
